import numpy as np

def lu_decomposition(matrix):
    n = len(matrix)
    L = np.zeros((n, n))
    U = np.zeros((n, n))

    for i in range(n):
        L[i, i] = 1  # La diagonal de L tiene unos.

        for j in range(i, n):
            U[i, j] = matrix[i, j] - sum(L[i, k] * U[k, j] for k in range(i))
        
        for j in range(i + 1, n):
            L[j, i] = (matrix[j, i] - sum(L[j, k] * U[k, i] for k in range(i))) / U[i, i]

    return L, U

# Ejemplo de uso
A = np.array([[2, 4, 6], [1, 3, 7], [4, 9, 8]])
L, U = lu_decomposition(A)

print("Matriz L (Triangular Inferior):")
print(L)

print("Matriz U (Triangular Superior):")
print(U)
